<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <log4net>
    <!--全局日志-->
    <appender name="Octopus_LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志路径-->
      <param name="File" value="log/"/>
      <!--是否是向文件中追加日志-->
      <param name="AppendToFile" value="true"/>
      <!--log保留天数-->
      <param name="MaxSizeRollBackups" value="3"/>
      <!--日志文件名是否是固定不变的-->
      <param name="StaticLogFileName" value="false"/>
      <!--日志文件名格式为:2008-08-31.log-->
      <param name="DatePattern" value="yyyy-MM-dd&quot;_All.log&quot;"/>
      <!--日志根据日期滚动-->
      <param name="RollingStyle" value="Date"/>

      <!--开始追加三项配置-->
      <!--单个文件最大数量-->
      <param name="MaximumFileSize" value="5120KB"/>
      <!--保留的log文件数量 超过此数量后 自动删除之前的  -->
      <param name="MaxSizeRollBackups" value="100" />
      <!--最小锁定模型以允许多个进程可以写入同一个文件-->
      <param name="lockingModel" type="log4net.Appender.FileAppender+MinimalLock" />
      <!--结束追加三项配置-->

      <layout type="log4net.Layout.PatternLayout">
        <!--参数依次：1.当前时间 2.线程ID 3.日志的当前优先级别【不足5个长度空格补齐】  4.当前日志对象的名称 5.日志信息 6.当前日志对象的名称 7.换行符号-->
        <param name="ConversionPattern" value="%d [%-3t] %-5p %c - %m %n" />
      </layout>
    </appender>
    <logger name="Octopus_LogFileAppender">
      <level value="ALL" />
      <appender-ref ref="Octopus_LogFileAppender" />
    </logger>
    <root>
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <level value="ALL" />
    </root>
  </log4net>

  <appSettings/>
  <connectionStrings/>
  <system.web>
    <securityPolicy>
      <trustLevel name="Full" policyFile="internal"/>
      <trustLevel name="High" policyFile="web_hightrust.config"/>
      <trustLevel name="Medium" policyFile="web_mediumtrust.config"/>
      <trustLevel name="Low" policyFile="web_lowtrust.config"/>
      <trustLevel name="Minimal" policyFile="web_minimaltrust.config"/>
    </securityPolicy>
    <trust level="Full" originUrl=""/>
    <compilation debug="true" targetFramework="4.0"/>
    <!--
      通过 <authentication> 节，可配置 
      ASP.NET 用于识别进入用户的 
      安全身份验证模式。
    -->
    <authentication mode="Windows"/>
    <sessionState mode="InProc" cookieName="i6btRZepYe3" timeout="40" cookieless="false"/>
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8"/>
    <httpRuntime enableVersionHeader="false" maxRequestLength="51200" executionTimeout="300" requestValidationMode="2.0" requestPathInvalidCharacters=""/>
    <!--
       通过 <customErrors> 节，可以配置
       在执行请求的过程中出现未处理的错误时要执行 
       的操作。具体而言，
       开发人员通过该节可配置要显示的 html 错误页，
       以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>-->
    <httpHandlers>
      <add verb="*" path="/imageslib/*" type="FBImageSkip.ImageSkip,FBImageSkip"/>
    </httpHandlers>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <!-- 
        system.webServer 节是在 Internet Information Services 7.0 下运行 ASP.NET AJAX 
        所必需的。对于早期版本的 IIS，不必保留此节。
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <handlers>
      <!--自定义-->
      <add name="FBImageSkip" verb="*" path="/imageslib/*" type="FBImageSkip.ImageSkip,FBImageSkip"/>
    </handlers>
  </system.webServer>
</configuration>